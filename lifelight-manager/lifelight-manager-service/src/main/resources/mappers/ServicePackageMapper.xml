<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lifelight.dubbo.dao.ServicePackageMapper">
  <resultMap id="BaseResultMap" type="com.lifelight.api.entity.ServicePackage">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="package_name" jdbcType="VARCHAR" property="packageName" />
    <result column="package_desc" jdbcType="VARCHAR" property="packageDesc" />
    <result column="in_use" jdbcType="INTEGER" property="inUse" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="self_payment" jdbcType="DOUBLE" property="selfPayment" />
    <result column="compensate_payment" jdbcType="DOUBLE" property="compensatePayment" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="platform_id" jdbcType="INTEGER" property="platformId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, package_name, in_use, create_time, update_time, platform_id,compensate_payment,
    self_payment,price,package_desc
  </sql>
  <select id="selectByExample" parameterType="com.lifelight.api.entity.ServicePackageExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from service_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from service_package
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from service_package
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lifelight.api.entity.ServicePackageExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from service_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lifelight.api.entity.ServicePackage">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into service_package (package_name, in_use, create_time, 
      update_time, platform_id,compensate_payment,self_payment,package_desc,price)
    values (#{packageName,jdbcType=VARCHAR}, #{inUse,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP},
       #{platformId,jdbcType=INTEGER},
       #{compensatePayment,jdbcType=DOUBLE},
       #{selfPayment,jdbcType=DOUBLE},
       #{packageDesc,jdbcType=VARCHAR},
       #{price,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.lifelight.api.entity.ServicePackage">
    insert into service_package
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="packageName != null">
        package_name,
      </if>
      <if test="inUse != null">
        in_use,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="platformId != null">
        platform_id,
      </if>
      <if test="packageDesc != null and packageDesc !=''">
        package_desc,
      </if>
      <if test="compensatePayment != null">
        compensate_payment,
      </if>
      <if test="selfPayment != null">
        self_payment,
      </if>
      <if test="price != null">
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="packageName != null">
        #{packageName,jdbcType=VARCHAR},
      </if>
      <if test="inUse != null">
        #{inUse,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="platformId != null">
        #{platformId,jdbcType=INTEGER},
      </if>
      <if test="packageDesc != null and packageDesc !=''">
        #{packageDesc,jdbcType=VARCHAR},
      </if>
      <if test="compensatePayment != null">
        #{compensatePayment,jdbcType=DOUBLE},
      </if>
      <if test="selfPayment != null">
        #{selfPayment,jdbcType=DOUBLE},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lifelight.api.entity.ServicePackageExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from service_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update service_package
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.packageName != null">
        package_name = #{record.packageName,jdbcType=VARCHAR},
      </if>
      <if test="record.inUse != null">
        in_use = #{record.inUse,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.platformId != null">
        platform_id = #{record.platformId,jdbcType=INTEGER},
      </if>
      <if test="record.compensatePayment != null">
        compensate_payment = #{record.compensatePayment,jdbcType=DOUBLE},
      </if>
      <if test="record.selfPayment != null">
        selft_payment = #{record.selftPayment,jdbcType=DOUBLE},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.packageDesc != null">
        package_desc = #{record.packageDesc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update service_package
    set id = #{record.id,jdbcType=INTEGER},
      package_name = #{record.packageName,jdbcType=VARCHAR},
      in_use = #{record.inUse,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      platform_id = #{record.platformId,jdbcType=INTEGER},
      compensate_payment = #{record.compensatePayment,jdbcType=DOUBLE},
      self_payment = #{record.selfPayment,jdbcType=DOUBLE},
      price = #{record.price,jdbcType=DOUBLE},
      package_desc = #{record.packageDesc,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lifelight.api.entity.ServicePackage">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update service_package
    <set>
      <if test="packageName != null">
        package_name = #{packageName,jdbcType=VARCHAR},
      </if>
      <if test="inUse != null">
        in_use = #{inUse,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="platformId != null">
        platform_id = #{platformId,jdbcType=INTEGER},
      </if>
      <if test="compensatePayment != null">
        compensate_payment = #{compensatePayment,jdbcType=DOUBLE},
      </if>
      <if test="selfPayment != null">
        self_payment = #{selfPayment,jdbcType=DOUBLE},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="packageDesc != null">
        package_desc = #{packageDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lifelight.api.entity.ServicePackage">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update service_package
    set package_name = #{packageName,jdbcType=VARCHAR},
      in_use = #{inUse,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      platform_id = #{platformId,jdbcType=INTEGER},
      compensate_payment = #{record.compensatePayment,jdbcType=DOUBLE},
      self_payment = #{record.selfPayment,jdbcType=DOUBLE},
      price = #{record.price,jdbcType=DOUBLE},
      package_desc = #{record.packageDesc,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getObjectCountByName" parameterType="com.lifelight.api.entity.ServicePackage" resultType="java.lang.Integer">
    select count(*) from service_package where 
    package_name = #{packageName,jdbcType=VARCHAR}
    AND platform_id = #{platformId,jdbcType=INTEGER}
    and in_use = 1
  </select>
  
   <select id="getServicePackageBy" parameterType="com.lifelight.api.entity.ServicePackage" resultMap="BaseResultMap">
  	SELECT sp.* FROM service_package sp WHERE
  	 in_use = 1 
  	 and sp.`package_name` = #{packageName}
  	 and sp.platform_id =#{platformId} 
  	 and sp.`id` != #{id}
  	 LIMIT 1
  </select>
  
   <select id="selectServicePackageListPage" parameterType="com.lifelight.api.entity.ServicePackage" 
   resultType="com.lifelight.api.vo.ServicePackageVO">
   select
    id, package_name as packageName, in_use as inUse, create_time as createTime
    , update_time as updateTime, platform_id as platformId,
    compensate_payment as compensatePayment,
    self_payment as selfPayment,
    price as price,
    package_desc as packageDesc
    from service_package where 1=1 and in_use = 1
    <if test="packageName !=null and packageName !=''">
         AND package_name like CONCAT(#{packageName,jdbcType=VARCHAR},'%')
    </if>
    <if test="platformId !=null">
         AND platform_id = #{platformId,jdbcType=INTEGER}
    </if>
    <if test="id !=null">
         AND id = #{id,jdbcType=INTEGER}
    </if>
    order by create_time desc
  </select>
</mapper>