<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lifelight.dubbo.dao.XlPersonScheduleMapper">
  <resultMap id="BaseResultMap" type="com.lifelight.api.entity.XlPersonSchedule">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="contract_id" jdbcType="VARCHAR" property="contractId" />
    <result column="input_person" jdbcType="VARCHAR" property="inputPerson" />
    <result column="check_org" jdbcType="VARCHAR" property="checkOrg" />
    <result column="check_time" jdbcType="TIMESTAMP" property="checkTime" />
    <result column="service_package" jdbcType="VARCHAR" property="servicePackage" />
    <result column="service_package_desc" jdbcType="VARCHAR" property="servicePackageDesc" />
    <result column="project_type" jdbcType="VARCHAR" property="projectType" />
    <result column="project_type_desc" jdbcType="VARCHAR" property="projectTypeDesc" />
    <result column="project_value" jdbcType="VARCHAR" property="projectValue" />
    <result column="examination_info" jdbcType="LONGVARCHAR" property="examinationInfo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lifelight.api.entity.XlPersonSchedule">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="project_value" jdbcType="LONGVARCHAR" property="projectValue" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, contract_id, input_person, check_org, check_time, project_type, project_type_desc, 
    create_time, update_time,service_package,service_package_desc,project_value,examination_info
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    project_value
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.lifelight.api.entity.XlPersonScheduleExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xl_person_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.lifelight.api.entity.XlPersonScheduleExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xl_person_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from xl_person_schedule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from xl_person_schedule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lifelight.api.entity.XlPersonScheduleExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from xl_person_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lifelight.api.entity.XlPersonSchedule">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into xl_person_schedule (contract_id, input_person, check_org, 
      check_time, project_type, project_type_desc, 
      create_time, update_time, project_value,service_package,service_package_desc
      )
    values (#{contractId,jdbcType=VARCHAR}, #{inputPerson,jdbcType=VARCHAR}, #{checkOrg,jdbcType=VARCHAR}, 
      #{checkTime,jdbcType=TIMESTAMP}, #{projectType,jdbcType=VARCHAR}, #{projectTypeDesc,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{projectValue,jdbcType=LONGVARCHAR}
      , #{servicePackage,jdbcType=VARCHAR}, #{servicePackageDesc,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lifelight.api.entity.XlPersonSchedule">
    insert into xl_person_schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="contractId != null and contractId !=''">
        contract_id,
      </if>
      <if test="inputPerson != null and inputPerson !=''">
        input_person,
      </if>
      <if test="checkOrg != null and checkOrg!=''">
        check_org,
      </if>
      <if test="checkTime != null and checkTime !=''">
        check_time,
      </if>
      <if test="projectType != null and projectType !=''">
        project_type,
      </if>
      <if test="projectTypeDesc != null and projectTypeDesc !=''">
        project_type_desc,
      </if>
      <if test="createTime != null and createTime !=''">
        create_time,
      </if>
      <if test="updateTime != null and updateTime !=''">
        update_time,
      </if>
      <if test="projectValue != null and projectValue !=''">
        project_value,
      </if>
      <if test="servicePackage != null and servicePackage !=''">
        service_package,
      </if>
      <if test="servicePackageDesc != null and servicePackageDesc !=''">
        service_package_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="contractId != null and contractId !=''">
        #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="inputPerson != null and inputPerson !='' ">
        #{inputPerson,jdbcType=VARCHAR},
      </if>
      <if test="checkOrg != null and checkOrg !=''">
        #{checkOrg,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null and checkTime!=''">
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectType != null and projectType!=''">
        #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="projectTypeDesc != null and projectTypeDesc!=''">
        #{projectTypeDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null and createTime !=''">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null and updateTime !=''">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectValue != null and projectValue!=''">
        #{projectValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="servicePackage != null and servicePackage !=''">
        #{servicePackage,jdbcType=VARCHAR},
      </if>
      <if test="servicePackageDesc != null and servicePackageDesc !=''">
        #{servicePackageDesc,jdbcType=VARCAHR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lifelight.api.entity.XlPersonScheduleExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from xl_person_schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update xl_person_schedule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.contractId != null">
        contract_id = #{record.contractId,jdbcType=VARCHAR},
      </if>
      <if test="record.inputPerson != null">
        input_person = #{record.inputPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.checkOrg != null">
        check_org = #{record.checkOrg,jdbcType=VARCHAR},
      </if>
      <if test="record.checkTime != null">
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.projectType != null">
        project_type = #{record.projectType,jdbcType=VARCHAR},
      </if>
      <if test="record.projectTypeDesc != null">
        project_type_desc = #{record.projectTypeDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.projectValue != null">
        project_value = #{record.projectValue,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update xl_person_schedule
    set id = #{record.id,jdbcType=INTEGER},
      contract_id = #{record.contractId,jdbcType=VARCHAR},
      input_person = #{record.inputPerson,jdbcType=VARCHAR},
      check_org = #{record.checkOrg,jdbcType=VARCHAR},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      project_type = #{record.projectType,jdbcType=VARCHAR},
      project_type_desc = #{record.projectTypeDesc,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      project_value = #{record.projectValue,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update xl_person_schedule
    set id = #{record.id,jdbcType=INTEGER},
      contract_id = #{record.contractId,jdbcType=VARCHAR},
      input_person = #{record.inputPerson,jdbcType=VARCHAR},
      check_org = #{record.checkOrg,jdbcType=VARCHAR},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      project_type = #{record.projectType,jdbcType=VARCHAR},
      project_type_desc = #{record.projectTypeDesc,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lifelight.api.vo.XlPersonScheduleVO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update xl_person_schedule
    <set>
      <if test="contractId != null and contractId !=''">
        contract_id = #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="inputPerson != null and inputPerson !=''">
        input_person = #{inputPerson,jdbcType=VARCHAR},
      </if>
      <if test="checkOrg != null and checkOrg !=''">
        check_org = #{checkOrg,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null and checkTime !=''">
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectType != null and projectType !=''">
        project_type = #{projectType,jdbcType=VARCHAR},
      </if>
      <if test="projectTypeDesc != null and projectTypeDesc!=''">
        project_type_desc = #{projectTypeDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null and createTime !=''">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null and updateTime !=''">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectValue != null and projectValue !=''">
        project_value = #{projectValue,jdbcType=LONGVARCHAR},
      </if>
      <if test="examinationInfo != null and examinationInfo !=''">
        examination_info = #{examinationInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lifelight.api.entity.XlPersonSchedule">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update xl_person_schedule
    set contract_id = #{contractId,jdbcType=VARCHAR},
      input_person = #{inputPerson,jdbcType=VARCHAR},
      check_org = #{checkOrg,jdbcType=VARCHAR},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      project_type = #{projectType,jdbcType=VARCHAR},
      project_type_desc = #{projectTypeDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      project_value = #{projectValue,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lifelight.api.entity.XlPersonSchedule">
    update xl_person_schedule
    set contract_id = #{contractId,jdbcType=VARCHAR},
      input_person = #{inputPerson,jdbcType=VARCHAR},
      check_org = #{checkOrg,jdbcType=VARCHAR},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      project_type = #{projectType,jdbcType=VARCHAR},
      project_type_desc = #{projectTypeDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
    <select id="selectPersonScheduleListPage" parameterType="com.lifelight.api.vo.XlPersonDocumentVO" 
    resultType="com.lifelight.api.vo.XlPersonDocumentVO" >
		SELECT
			pd.id ,pd.name,pd.family_relations AS familyRelations,pd.sex AS sex,
			pd.card_num AS cardNum,pd.health_card AS healthCard,
			pc.sign_status AS signStatus,pc.audit_status AS auditStatus,
			pd.residential_address AS residentialAddress,
			pd.mobile AS mobile,pd.key_crowd_type AS keyCrowdType,
			pd.document_doctor AS documentDoctor,pd.document_date AS documentDate,
			pc.sign_start_date AS signStartDate,
			pc.sign_end_date signEndDate,
			pc.sign_date AS signDate,
			pc.sign_payment as signPayment,
			pc.self_payment as selfPayment,
			pc.compensation_payment as compensationPayment,
			pc.service_package as servicePackage,
			da1.org_name as signOrgName,
			sp.package_name as servicePackageDesc,
			pc.finish_status as finishStatus
		FROM xl_person_contract AS pc
		LEFT JOIN xl_person_document pd ON pc.document_id = pd.id
				<if test="(projectType != null and projectType!='') or (projectType !='' and projectType !=null and finishStatus!='' and finishStatus !=null)">
					RIGHT JOIN (SELECT 
				            distinct(contract_id) contract_id
				        FROM
				            xl_person_schedule xs
				        WHERE
				            1 = 1 
				            <if test="projectType != null and projectType !=''">
								and xs.project_type =  #{projectType,jdbcType=VARCHAR}
							</if>
							<if test="servicePackage != null and servicePackage !=''">
								and xs.service_package = #{servicePackage,jdbcType=VARCHAR}
							</if>
							<if test="finishStatus != null and finishStatus !='' and projectType !=null and projectType !=''">
								<if test="finishStatus ==1">
									and xs.project_value is not null
								</if>
								<if test="finishStatus ==2">
									and xs.project_value is null
								</if>
							</if>
							) as xx on xx.contract_id = pc.id
				</if>
		LEFT JOIN service_package sp on pc.service_package = sp.id
		LEFT JOIN (SELECT r.`doctor_id`,r.`org_id`,b.`name` AS org_name FROM jy_org_doc_rel r 
			LEFT JOIN jy_sign_type_rel t ON r.id = t.`jy_rel_id`
			LEFT JOIN backstage_user_info b ON r.`org_id` = b.`manager_id`
			WHERE r.`sign_type` = 1 AND r.`in_use` =1 AND t.`jy_type` =1
		)da1 ON pc.`sign_doctor_id` = da1.doctor_id
		WHERE 1=1 and pc.in_use = 1
		<if test="name != null and name !=''">
			and pd.name like #{name,jdbcType=VARCHAR}"%"
		</if>
		<if test="signDoctorId != null and signDoctorId !=''">
			and pc.sign_doctor_id = #{signDoctorId,jdbcType=VARCHAR}
		</if>
		<if test="cardNum != null and cardNum !=''">
			and pd.card_num like #{cardNum,jdbcType=VARCHAR}"%"
		</if>
		<if test="healthCard != null and healthCard !=''">
			and pd.health_card like #{healthCard,jdbcType=VARCHAR}"%"
		</if>
		<if test="signStatus != null and signStatus!=''">
			and pc.sign_status = #{signStatus,jdbcType=VARCHAR}
		</if>
		<if test="auditStatus != null and auditStatus !=''">
			and pc.audit_status = #{auditStatus,jdbcType=VARCHAR}
		</if>
		<if test="platformId != null">
			and pd.platform_id = #{platformId,jdbcType=INTEGER}
		</if>
		<if test="signStartTime != null and signStartTime !=''">
			and pc.sign_date &gt;= #{signStartTime,jdbcType=TIMESTAMP}
		</if>
		<if test="signEndTime != null and signEndTime !=''">
			and pc.sign_date &lt;= #{signEndTime,jdbcType=TIMESTAMP}
		</if>
		<if test="servicePackage != null and servicePackage !=''">
			and pc.service_package = #{servicePackage,jdbcType=VARCHAR}
		</if>
		<if test="finishStatus != null and finishStatus !='' 
			and (projectType ==null or projectType =='')">
			and pc.finish_status = #{finishStatus,jdbcType=VARCHAR}
		</if>
		<if test="medicalType != null and medicalType !=''">
			and pc.medical_type = #{medicalType,jdbcType=VARCHAR}
		</if>
		<if test="signPersonType != null and signPersonType !=''">
			<!-- and pc.sign_person_type = #{signPersonType,jdbcType=VARCHAR} -->
			and LOCATE(#{signPersonType,jdbcType=VARCHAR},pc.sign_person_type)>0
		</if>
		<if test="medicalType != null and medicalType !=''">
			and pc.medical_type = #{medicalType,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year !=''">
			and pc.year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="isPayment != null and isPayment !='' and isPayment=='1' ">
			and pc.sign_payment &gt;0
		</if>
		<if test="isPayment != null and isPayment !='' and isPayment=='2' ">
			and pc.sign_payment = 0
		</if>
		order by pc.create_time desc
	</select>
	
	 <select id="selectPersonScheduleFinish" parameterType="com.lifelight.api.vo.XlPersonDocumentVO" 
	 resultType="java.lang.Integer" >
		SELECT
			count(pc.id)
		FROM xl_person_contract AS pc
		LEFT JOIN xl_person_document pd ON pc.document_id = pd.id
		WHERE 1=1 and pc.in_use = 1 and pc.finish_status = 1
		<if test="signDoctorId != null and signDoctorId !=''">
			and pc.sign_doctor_id = #{signDoctorId,jdbcType=VARCHAR}
		</if>
		<if test="platformId != null">
			and pd.platform_id = #{platformId,jdbcType=INTEGER}
		</if>
	</select>
	 <select id="selectPersonScheduleSum" parameterType="com.lifelight.api.vo.XlPersonDocumentVO" 
	 resultType="java.lang.Integer" >
		SELECT
			count(pc.id)
		FROM xl_person_contract AS pc
		LEFT JOIN xl_person_document pd ON pc.document_id = pd.id
		WHERE 1=1 and pc.in_use = 1
		<if test="signDoctorId != null and signDoctorId !=''">
			and pc.sign_doctor_id = #{signDoctorId,jdbcType=VARCHAR}
		</if>
		<if test="platformId != null">
			and pd.platform_id = #{platformId,jdbcType=INTEGER}
		</if>
	</select>
	
	
	
	 <select id="selectSchedule" parameterType="com.lifelight.api.vo.XlPersonScheduleVO" 
	 resultType="com.lifelight.api.vo.XlPersonScheduleVO">
		SELECT id, ps.contract_id AS contractId, input_person AS inputPerson,
		 check_org AS checkOrg,  check_time AS checkTime, project_type AS projectType, 
		 project_type_desc AS projectTypeDesc, 
        create_time AS createTime, update_time AS updateTime,
        service_package AS servicePackage,service_package_desc AS servicePackageDesc,
        project_value  AS projectValue,da.sex,da.name,da.document_id as documentId,
        ps.examination_info as examinationInfo
		FROM xl_person_schedule ps
		LEFT JOIN (
			SELECT pd.id AS document_id,pc.`id` AS contract_id ,pd.sex,pd.name
			FROM xl_person_document pd 
			LEFT JOIN xl_person_contract pc ON pd.id = pc.`document_id` AND pc.in_use =1
		)da
		ON ps.`contract_id` = da.contract_id
		where 1=1
		<if test="documentId != null">
			and da.document_id = #{documentId,jdbcType=INTEGER}
		</if>
		<if test="projectType != null and projectType !=''">
			and ps.project_type = #{projectType,jdbcType=VARCHAR}
		</if>
		<if test="contractId != null and contractId !=''">
			and ps.contract_id = #{contractId,jdbcType=VARCHAR}
		</if>
	</select>
	
	 <select id="selectNoFinishSchedule" parameterType="com.lifelight.api.entity.XlPersonSchedule" 
	 resultType="com.lifelight.api.vo.XlPersonScheduleVO">
		SELECT id, ps.contract_id AS contractId, input_person AS inputPerson,
		 check_org AS checkOrg,  check_time AS checkTime, project_type AS projectType, 
		 project_type_desc AS projectTypeDesc, 
        create_time AS createTime, update_time AS updateTime,
        service_package AS servicePackage,service_package_desc AS servicePackageDesc,
        project_value  AS projectValue,da.sex,da.name
		FROM xl_person_schedule ps
		LEFT JOIN (
			SELECT pd.id AS document_id,pc.`id` AS contract_id ,pd.sex,pd.name
			FROM xl_person_document pd 
			LEFT JOIN xl_person_contract pc
			 ON pd.id = pc.`document_id` AND pc.in_use =1
		)da
		ON ps.`contract_id` = da.contract_id
		WHERE  1=1
			and ps.input_person is null
			and ps.check_time is null
		<if test="contractId != null and contractId !=''">
			and ps.contract_id = #{contractId,jdbcType=VARCHAR}
		</if>
			
	</select>
	
	<delete id="deleteByContractId" parameterType="java.lang.Integer">
    delete from xl_person_schedule
   	 where contract_id = #{contractId,jdbcType=INTEGER}
  	</delete>
  	
  	<update id="updatByEntity" parameterType="com.lifelight.api.vo.XlPersonScheduleVO">
	    update xl_person_schedule
	    <set>
	      <if test="updateTime != null">
	        update_time = #{updateTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="examinationInfo != null">
	        examination_info = #{examinationInfo,jdbcType=VARCHAR},
	      </if>
	    </set>
	   where 1=1
	   		<if test="contractId != null and contractId !=''">
				and contract_id = #{contractId,jdbcType=VARCHAR}
			</if>
	   
  </update>
</mapper>