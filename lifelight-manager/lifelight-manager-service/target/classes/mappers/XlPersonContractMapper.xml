<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lifelight.dubbo.dao.XlPersonContractMapper">
  <resultMap id="BaseResultMap" type="com.lifelight.api.entity.XlPersonContract">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="document_id" jdbcType="INTEGER" property="documentId" />
    <result column="is_poor" jdbcType="VARCHAR" property="isPoor" />
    <result column="sign_date" jdbcType="TIMESTAMP" property="signDate" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="family_count" jdbcType="VARCHAR" property="familyCount" />
    <result column="sign_mode" jdbcType="VARCHAR" property="signMode" />
    <result column="captain_name" jdbcType="VARCHAR" property="captainName" />
    <result column="doctor_mobile" jdbcType="VARCHAR" property="doctorMobile" />
    <result column="health" jdbcType="VARCHAR" property="health" />
    <result column="year" jdbcType="VARCHAR" property="year" />
    <result column="sign_doctor_id" jdbcType="VARCHAR" property="signDoctorId" />
    <result column="sign_start_date" jdbcType="TIMESTAMP" property="signStartDate" />
    <result column="sign_end_date" jdbcType="TIMESTAMP" property="signEndDate" />
    <result column="service_content" jdbcType="VARCHAR" property="serviceContent" />
    <result column="health_assessment" jdbcType="VARCHAR" property="healthAssessment" />
    <result column="arrangement" jdbcType="VARCHAR" property="arrangement" />
    <result column="service_mode" jdbcType="VARCHAR" property="serviceMode" />
    <result column="medical_type" jdbcType="VARCHAR" property="medicalType" />
    <result column="sign_payment" jdbcType="DOUBLE" property="signPayment" />
    <result column="self_payment" jdbcType="DOUBLE" property="selfPayment" />
    <result column="compensation_payment" jdbcType="DOUBLE" property="compensationPayment" />
    <result column="sign_person_type" jdbcType="VARCHAR" property="signPersonType" />
    <result column="service_package" jdbcType="VARCHAR" property="servicePackage" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="sign_status" jdbcType="VARCHAR" property="signStatus" />
    <result column="finish_status" jdbcType="VARCHAR" property="finishStatus" />
    <result column="audit_status" jdbcType="VARCHAR" property="auditStatus" />
    <result column="in_use" jdbcType="VARCHAR" property="inUse" />
    <result column="variable" jdbcType="LONGVARCHAR" property="variable" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, document_id, is_poor, sign_date, mobile, family_count, sign_mode, captain_name, 
    doctor_mobile, health, year, sign_doctor_id, sign_start_date, sign_end_date, service_content, 
    health_assessment, arrangement, service_mode, medical_type, sign_payment, self_payment, 
    compensation_payment, sign_person_type, service_package, create_time, update_time, 
    sign_status, finish_status, audit_status,in_use,variable
  </sql>
  <select id="selectByExample" parameterType="com.lifelight.api.entity.XlPersonContractExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from xl_person_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from xl_person_contract
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from xl_person_contract
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lifelight.api.entity.XlPersonContractExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from xl_person_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lifelight.api.entity.XlPersonContract">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into xl_person_contract (document_id, is_poor, sign_date, 
      mobile, family_count, sign_mode, 
      captain_name, doctor_mobile, health, 
      year, sign_doctor_id, sign_start_date, 
      sign_end_date, service_content, health_assessment, 
      arrangement, service_mode, medical_type, 
      sign_payment, self_payment, compensation_payment, 
      sign_person_type, service_package, create_time, 
      update_time, sign_status, finish_status, 
      audit_status,variable)
    values (#{documentId,jdbcType=INTEGER}, #{isPoor,jdbcType=VARCHAR}, #{signDate,jdbcType=TIMESTAMP}, 
      #{mobile,jdbcType=VARCHAR}, #{familyCount,jdbcType=VARCHAR}, #{signMode,jdbcType=VARCHAR}, 
      #{captainName,jdbcType=VARCHAR}, #{doctorMobile,jdbcType=VARCHAR}, #{health,jdbcType=VARCHAR}, 
      #{year,jdbcType=VARCHAR}, #{signDoctorId,jdbcType=VARCHAR}, #{signStartDate,jdbcType=TIMESTAMP}, 
      #{signEndDate,jdbcType=TIMESTAMP}, #{serviceContent,jdbcType=VARCHAR}, #{healthAssessment,jdbcType=VARCHAR}, 
      #{arrangement,jdbcType=VARCHAR}, #{serviceMode,jdbcType=VARCHAR}, #{medicalType,jdbcType=VARCHAR}, 
      #{signPayment,jdbcType=DOUBLE}, #{selfPayment,jdbcType=DOUBLE}, #{compensationPayment,jdbcType=DOUBLE}, 
      #{signPersonType,jdbcType=VARCHAR}, #{servicePackage,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{signStatus,jdbcType=VARCHAR}, #{finishStatus,jdbcType=VARCHAR}, 
      #{auditStatus,jdbcType=VARCHAR},
      #{variable,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"  parameterType="com.lifelight.api.entity.XlPersonContract">
    
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into xl_person_contract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="documentId != null">
        document_id,
      </if>
      <if test="isPoor != null and isPoor !=''">
        is_poor,
      </if>
      <if test="signDate != null and signDate !=''">
        sign_date,
      </if>
      <if test="mobile != null and mobile !=''">
        mobile,
      </if>
      <if test="familyCount != null and familyCount !=''">
        family_count,
      </if>
      <if test="signMode != null and signMode !=''">
        sign_mode,
      </if>
      <if test="captainName != null and captainName !=''">
        captain_name,
      </if>
      <if test="doctorMobile != null and doctorMobile !=''">
        doctor_mobile,
      </if>
      <if test="health != null and health !=''">
        health,
      </if>
      <if test="year != null and year !=''">
        year,
      </if>
      <if test="signDoctorId != null and signDoctorId !=''">
        sign_doctor_id,
      </if>
      <if test="signStartDate != null and signStartDate !=''">
        sign_start_date,
      </if>
      <if test="signEndDate != null and signEndDate !=''">
        sign_end_date,
      </if>
      <if test="serviceContent != null and serviceContent !=''">
        service_content,
      </if>
      <if test="healthAssessment != null and healthAssessment !=''">
        health_assessment,
      </if>
      <if test="arrangement != null and arrangement !=''">
        arrangement,
      </if>
      <if test="serviceMode != null and serviceMode !=''">
        service_mode,
      </if>
      <if test="medicalType != null and medicalType !=''">
        medical_type,
      </if>
      <if test="signPayment != null and signPayment !=''">
        sign_payment,
      </if>
      <if test="selfPayment != null and selfPayment !=''">
        self_payment,
      </if>
      <if test="compensationPayment != null and compensationPayment !=''">
        compensation_payment,
      </if>
      <if test="signPersonType != null and signPersonType !=''">
        sign_person_type,
      </if>
      <if test="servicePackage != null and servicePackage !=''">
        service_package,
      </if>
      <if test="createTime != null and createTime !=''">
        create_time,
      </if>
      <if test="updateTime != null and updateTime !=''">
        update_time,
      </if>
      <if test="signStatus != null and signStatus !=''">
        sign_status,
      </if>
      <if test="finishStatus != null and finishStatus !=''">
        finish_status,
      </if>
      <if test="auditStatus != null and auditStatus !=''">
        audit_status,
      </if>
      <if test="inUse != null and inUse !=''">
        in_use,
      </if>
      <if test="variable != null and variable !=''">
        variable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="documentId != null">
        #{documentId,jdbcType=INTEGER},
      </if>
      <if test="isPoor != null and isPoor !=''">
        #{isPoor,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null and signDate !=''">
        #{signDate,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null and mobile !=''">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="familyCount != null and familyCount !=''">
        #{familyCount,jdbcType=VARCHAR},
      </if>
      <if test="signMode != null and signMode !=''">
        #{signMode,jdbcType=VARCHAR},
      </if>
      <if test="captainName != null and captainName !=''">
        #{captainName,jdbcType=VARCHAR},
      </if>
      <if test="doctorMobile != null and doctorMobile !=''">
        #{doctorMobile,jdbcType=VARCHAR},
      </if>
      <if test="health != null and health !=''">
        #{health,jdbcType=VARCHAR},
      </if>
      <if test="year != null and year !=''">
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="signDoctorId != null and signDoctorId !=''">
        #{signDoctorId,jdbcType=VARCHAR},
      </if>
      <if test="signStartDate != null and signStartDate  !=''">
        #{signStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="signEndDate != null and signEndDate !=''">
        #{signEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceContent != null and serviceContent !=''">
        #{serviceContent,jdbcType=VARCHAR},
      </if>
      <if test="healthAssessment != null and healthAssessment !=''">
        #{healthAssessment,jdbcType=VARCHAR},
      </if>
      <if test="arrangement != null and arrangement !=''">
        #{arrangement,jdbcType=VARCHAR},
      </if>
      <if test="serviceMode != null and  serviceMode!=''">
        #{serviceMode,jdbcType=VARCHAR},
      </if>
      <if test="medicalType != null and medicalType !=''">
        #{medicalType,jdbcType=VARCHAR},
      </if>
      <if test="signPayment != null and signPayment !=''">
        #{signPayment,jdbcType=DOUBLE},
      </if>
      <if test="selfPayment != null and selfPayment !=''">
        #{selfPayment,jdbcType=DOUBLE},
      </if>
      <if test="compensationPayment != null and compensationPayment !=''">
        #{compensationPayment,jdbcType=DOUBLE},
      </if>
      <if test="signPersonType != null and signPersonType !=''">
        #{signPersonType,jdbcType=VARCHAR},
      </if>
      <if test="servicePackage != null and servicePackage !=''">
        #{servicePackage,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null and createTime !=''">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null and updateTime !=''">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signStatus != null and signStatus !=''">
        #{signStatus,jdbcType=VARCHAR},
      </if>
      <if test="finishStatus != null and  finishStatus!=''">
        #{finishStatus,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null and auditStatus !=''">
        #{auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="inUse != null and inUse !=''">
        #{inUse,jdbcType=VARCHAR},
      </if>
      <if test="variable != null and variable !=''">
        #{variable,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lifelight.api.entity.XlPersonContractExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from xl_person_contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update xl_person_contract
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.documentId != null">
        document_id = #{record.documentId,jdbcType=INTEGER},
      </if>
      <if test="record.isPoor != null">
        is_poor = #{record.isPoor,jdbcType=VARCHAR},
      </if>
      <if test="record.signDate != null">
        sign_date = #{record.signDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.familyCount != null">
        family_count = #{record.familyCount,jdbcType=VARCHAR},
      </if>
      <if test="record.signMode != null">
        sign_mode = #{record.signMode,jdbcType=VARCHAR},
      </if>
      <if test="record.captainName != null">
        captain_name = #{record.captainName,jdbcType=VARCHAR},
      </if>
      <if test="record.doctorMobile != null">
        doctor_mobile = #{record.doctorMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.health != null">
        health = #{record.health,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=VARCHAR},
      </if>
      <if test="record.signDoctorId != null">
        sign_doctor_id = #{record.signDoctorId,jdbcType=VARCHAR},
      </if>
      <if test="record.signStartDate != null">
        sign_start_date = #{record.signStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.signEndDate != null">
        sign_end_date = #{record.signEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.serviceContent != null">
        service_content = #{record.serviceContent,jdbcType=VARCHAR},
      </if>
      <if test="record.healthAssessment != null">
        health_assessment = #{record.healthAssessment,jdbcType=VARCHAR},
      </if>
      <if test="record.arrangement != null">
        arrangement = #{record.arrangement,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceMode != null">
        service_mode = #{record.serviceMode,jdbcType=VARCHAR},
      </if>
      <if test="record.medicalType != null">
        medical_type = #{record.medicalType,jdbcType=VARCHAR},
      </if>
      <if test="record.signPayment != null">
        sign_payment = #{record.signPayment,jdbcType=DOUBLE},
      </if>
      <if test="record.selfPayment != null">
        self_payment = #{record.selfPayment,jdbcType=DOUBLE},
      </if>
      <if test="record.compensationPayment != null">
        compensation_payment = #{record.compensationPayment,jdbcType=DOUBLE},
      </if>
      <if test="record.signPersonType != null">
        sign_person_type = #{record.signPersonType,jdbcType=VARCHAR},
      </if>
      <if test="record.servicePackage != null">
        service_package = #{record.servicePackage,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.signStatus != null">
        sign_status = #{record.signStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.finishStatus != null">
        finish_status = #{record.finishStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.auditStatus != null">
        audit_status = #{record.auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.variable != null">
        variable = #{record.variable,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update xl_person_contract
    set id = #{record.id,jdbcType=INTEGER},
      document_id = #{record.documentId,jdbcType=INTEGER},
      is_poor = #{record.isPoor,jdbcType=VARCHAR},
      sign_date = #{record.signDate,jdbcType=TIMESTAMP},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      family_count = #{record.familyCount,jdbcType=VARCHAR},
      sign_mode = #{record.signMode,jdbcType=VARCHAR},
      captain_name = #{record.captainName,jdbcType=VARCHAR},
      doctor_mobile = #{record.doctorMobile,jdbcType=VARCHAR},
      health = #{record.health,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=VARCHAR},
      sign_doctor_id = #{record.signDoctorId,jdbcType=VARCHAR},
      sign_start_date = #{record.signStartDate,jdbcType=TIMESTAMP},
      sign_end_date = #{record.signEndDate,jdbcType=TIMESTAMP},
      service_content = #{record.serviceContent,jdbcType=VARCHAR},
      health_assessment = #{record.healthAssessment,jdbcType=VARCHAR},
      arrangement = #{record.arrangement,jdbcType=VARCHAR},
      service_mode = #{record.serviceMode,jdbcType=VARCHAR},
      medical_type = #{record.medicalType,jdbcType=VARCHAR},
      sign_payment = #{record.signPayment,jdbcType=DOUBLE},
      self_payment = #{record.selfPayment,jdbcType=DOUBLE},
      compensation_payment = #{record.compensationPayment,jdbcType=DOUBLE},
      sign_person_type = #{record.signPersonType,jdbcType=VARCHAR},
      service_package = #{record.servicePackage,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      sign_status = #{record.signStatus,jdbcType=VARCHAR},
      finish_status = #{record.finishStatus,jdbcType=VARCHAR},
      audit_status = #{record.auditStatus,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lifelight.api.entity.XlPersonContract">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update xl_person_contract
    <set>
      <if test="documentId != null">
        document_id = #{documentId,jdbcType=INTEGER},
      </if>
      <if test="isPoor != null and isPoor !=''">
        is_poor = #{isPoor,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null and signDate !=''">
        sign_date = #{signDate,jdbcType=TIMESTAMP},
      </if>
      <if test="mobile != null and mobile !=''">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="familyCount != null and familyCount !=''">
        family_count = #{familyCount,jdbcType=VARCHAR},
      </if>
      <if test="signMode != null and signMode !=''">
        sign_mode = #{signMode,jdbcType=VARCHAR},
      </if>
      <if test="captainName != null and captainName !=''">
        captain_name = #{captainName,jdbcType=VARCHAR},
      </if>
      <if test="doctorMobile != null and doctorMobile !=''">
        doctor_mobile = #{doctorMobile,jdbcType=VARCHAR},
      </if>
      <if test="health != null and health !=''">
        health = #{health,jdbcType=VARCHAR},
      </if>
      <if test="year != null and year !=''">
        year = #{year,jdbcType=VARCHAR},
      </if>
      <if test="signDoctorId != null and signDoctorId !=''">
        sign_doctor_id = #{signDoctorId,jdbcType=VARCHAR},
      </if>
      <if test="signStartDate != null and signStartDate  !=''">
        sign_start_date = #{signStartDate,jdbcType=TIMESTAMP},
      </if>
      <if test="signEndDate != null and signEndDate !=''">
        sign_end_date = #{signEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceContent != null and serviceContent !=''">
        service_content = #{serviceContent,jdbcType=VARCHAR},
      </if>
      <if test="healthAssessment != null and healthAssessment !=''">
        health_assessment = #{healthAssessment,jdbcType=VARCHAR},
      </if>
      <if test="arrangement != null and arrangement !=''">
        arrangement = #{arrangement,jdbcType=VARCHAR},
      </if>
      <if test="serviceMode != null and serviceMode !=''">
        service_mode = #{serviceMode,jdbcType=VARCHAR},
      </if>
      <if test="medicalType != null and medicalType !=''">
        medical_type = #{medicalType,jdbcType=VARCHAR},
      </if>
      <if test="signPayment != null and signPayment !=''">
        sign_payment = #{signPayment,jdbcType=DOUBLE},
      </if>
      <if test="selfPayment != null and selfPayment !=''">
        self_payment = #{selfPayment,jdbcType=DOUBLE},
      </if>
      <if test="compensationPayment != null and compensationPayment !=''">
        compensation_payment = #{compensationPayment,jdbcType=DOUBLE},
      </if>
      <if test="signPersonType != null and signPersonType !=''">
        sign_person_type = #{signPersonType,jdbcType=VARCHAR},
      </if>
      <if test="servicePackage != null and servicePackage !=''">
        service_package = #{servicePackage,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null and createTime !=''">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null and updateTime !=''">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signStatus != null and signStatus !=''">
        sign_status = #{signStatus,jdbcType=VARCHAR},
      </if>
      <if test="finishStatus != null and finishStatus !=''">
        finish_status = #{finishStatus,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null and auditStatus !=''">
        audit_status = #{auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="variable != null">
        variable = #{variable,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lifelight.api.entity.XlPersonContract">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update xl_person_contract
    set document_id = #{documentId,jdbcType=INTEGER},
      is_poor = #{isPoor,jdbcType=VARCHAR},
      sign_date = #{signDate,jdbcType=TIMESTAMP},
      mobile = #{mobile,jdbcType=VARCHAR},
      family_count = #{familyCount,jdbcType=VARCHAR},
      sign_mode = #{signMode,jdbcType=VARCHAR},
      captain_name = #{captainName,jdbcType=VARCHAR},
      doctor_mobile = #{doctorMobile,jdbcType=VARCHAR},
      health = #{health,jdbcType=VARCHAR},
      year = #{year,jdbcType=VARCHAR},
      sign_doctor_id = #{signDoctorId,jdbcType=VARCHAR},
      sign_start_date = #{signStartDate,jdbcType=TIMESTAMP},
      sign_end_date = #{signEndDate,jdbcType=TIMESTAMP},
      service_content = #{serviceContent,jdbcType=VARCHAR},
      health_assessment = #{healthAssessment,jdbcType=VARCHAR},
      arrangement = #{arrangement,jdbcType=VARCHAR},
      service_mode = #{serviceMode,jdbcType=VARCHAR},
      medical_type = #{medicalType,jdbcType=VARCHAR},
      sign_payment = #{signPayment,jdbcType=DOUBLE},
      self_payment = #{selfPayment,jdbcType=DOUBLE},
      compensation_payment = #{compensationPayment,jdbcType=DOUBLE},
      sign_person_type = #{signPersonType,jdbcType=VARCHAR},
      service_package = #{servicePackage,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      sign_status = #{signStatus,jdbcType=VARCHAR},
      finish_status = #{finishStatus,jdbcType=VARCHAR},
      audit_status = #{auditStatus,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectPersonContractListPage" parameterType="com.lifelight.api.vo.XlPersonDocumentVO" 
  resultType="com.lifelight.api.vo.XlPersonDocumentVO">
		SELECT
			pd.id ,pd.name,pd.family_relations AS familyRelations,pd.sex AS sex,
			pd.card_num AS cardNum,pd.health_card AS healthCard,
			pc.sign_status AS signStatus,pc.audit_status AS auditStatus,
			pd.residential_address AS residentialAddress,
			pd.mobile AS mobile,pd.key_crowd_type AS keyCrowdType,
			pd.document_doctor AS documentDoctor,pd.document_date AS documentDate,
			pc.sign_start_date AS signStartDate,
			pc.sign_end_date signEndDate,
			pc.sign_date AS signDate,
			da1.org_name AS signOrgName,
			pc.document_id as documentId,pd.manager_id as managerId,pd.birthday
			,pc.variable,pc.create_time as createTime
		FROM xl_person_contract AS pc
		LEFT JOIN xl_person_document pd ON pc.document_id = pd.id
		<!-- LEFT JOIN (SELECT ps.contract_id,GROUP_CONCAT(DISTINCT(ps.input_person)) AS input_person FROM xl_person_schedule ps GROUP BY ps.contract_id
		)da ON pc.id = da.contract_id -->
		LEFT JOIN (SELECT r.`doctor_id`,r.`org_id`,b.`name` AS org_name FROM jy_org_doc_rel r 
		LEFT JOIN jy_sign_type_rel t ON r.id = t.`jy_rel_id`
		LEFT JOIN backstage_user_info b ON r.`org_id` = b.`manager_id`
		WHERE r.`sign_type` = 1 AND r.`in_use` =1 AND t.`jy_type` =1
		)da1 ON pc.`sign_doctor_id` = da1.doctor_id
		WHERE 1=1 and pc.`in_use` = 1
		<if test="name != null and name !=''">
			and pd.name like CONCAT(#{name,jdbcType=VARCHAR},'%')
		</if>
		<if test="cardNum != null and cardNum !=''">
			and pd.card_num like CONCAT(#{cardNum,jdbcType=VARCHAR},'%')
		</if>
		<if test="healthCard != null and healthCard !=''">
			and pd.health_card like CONCAT(#{healthCard,jdbcType=VARCHAR},'%')
		</if>
		<if test="signDoctorId != null and signDoctorId!=''">
			and pc.sign_doctor_id = #{signDoctorId,jdbcType=VARCHAR}
		</if>
		<if test="signStatus != null and signStatus!=''">
			and pc.sign_status = #{signStatus,jdbcType=VARCHAR}
		</if>
		<if test="auditStatus != null and auditStatus !=''">
			and pc.audit_status = #{auditStatus,jdbcType=VARCHAR}
		</if>
		<if test="signStartTime != null and signStartTime !=''">
			and pc.sign_date &gt;= #{signStartTime,jdbcType=TIMESTAMP}
		</if>
		<if test="signEndTime != null and signEndTime !=''">
			and pc.sign_date &lt;= #{signEndTime,jdbcType=TIMESTAMP}
		</if>
		<!-- <if test="inputPerson != null and inputPerson !=''">
			and FIND_IN_SET(#{inputPerson,jdbcType=VARCHAR},da.input_person)
		</if> -->
		<if test="servicePackage != null and servicePackage !=''">
			and pc.service_package = #{servicePackage,jdbcType=VARCHAR}
		</if>
		<if test="finishStatus != null and finishStatus !=''">
			and pc.finish_status = #{finishStatus,jdbcType=VARCHAR}
		</if>
		<if test="medicalType != null and medicalType !=''">
			and pc.medical_type = #{medicalType,jdbcType=VARCHAR}
		</if>
		<if test="signPersonType != null and signPersonType !=''">
			and LOCATE(#{signPersonType,jdbcType=VARCHAR},pc.sign_person_type)>0
		</if>
		<if test="medicalType != null and medicalType !=''">
			and pc.medical_type = #{medicalType,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year !=''">
			and pc.year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="platformId != null">
			and pd.platform_id = #{platformId,jdbcType=INTEGER}
		</if>
		<if test="isPayment != null and isPayment !='' and isPayment=='1' ">
			and pc.sign_payment &gt;0
		</if>
		<if test="isPayment != null and isPayment !='' and isPayment=='2' ">
			and pc.sign_payment = 0
		</if>
		order by pc.create_time desc
	</select>
  <select id="selectAllPersonContract" parameterType="com.lifelight.api.vo.XlPersonDocumentVO" 
  resultType="com.lifelight.api.vo.XlPersonDocumentVO">
		SELECT
			pd.id ,pd.name,pd.family_relations AS familyRelations,pd.sex AS sex,
			pd.card_num AS cardNum,pd.health_card AS healthCard,
			pc.sign_status AS signStatus,pc.audit_status AS auditStatus,
			pd.residential_address AS residentialAddress,
			pd.permanent_address as permanentAddress,
			pd.document_id as documentId,
			pd.mobile AS mobile,pd.key_crowd_type AS keyCrowdType,
			pd.document_doctor AS documentDoctor,pd.document_date AS documentDate,
			pc.sign_start_date AS signStartDate,
			pc.sign_end_date signEndDate,
			pc.sign_date AS signDate,
			da1.org_name AS signOrgName,
			pc.sign_doctor_id as signDoctorId,
			pc.medical_type as medicalType,
			pc.sign_person_type as signPersonType,
			pc.service_package as servicePackage,
			b1.name as signDoctorName,
			pc.variable,
			sp.package_name as servicePackageDesc
		FROM xl_person_contract AS pc 
		LEFT JOIN xl_person_document pd ON pc.document_id = pd.id
		<!-- LEFT JOIN (
			SELECT ps.contract_id,GROUP_CONCAT(DISTINCT(ps.input_person)) AS input_person FROM xl_person_schedule ps GROUP BY ps.contract_id
		)da ON pc.id = da.contract_id -->
		LEFT JOIN (SELECT r.`doctor_id`,r.`org_id`,b.`name` AS org_name FROM jy_org_doc_rel r 
			LEFT JOIN jy_sign_type_rel t ON r.id = t.`jy_rel_id`
			LEFT JOIN backstage_user_info b ON r.`org_id` = b.`manager_id`
			WHERE r.`sign_type` = 1 AND r.`in_use` =1 AND t.`jy_type` =1
		)da1 ON pc.`sign_doctor_id` = da1.doctor_id
		LEFT JOIN backstage_user_info b1 ON b1.`manager_id` = pc.sign_doctor_id
		LEFT JOIN service_package sp on pc.service_package = sp.id
		WHERE 1=1 and pc.`in_use` = 1
		<if test="name != null and name !=''">
			and pd.name like CONCAT(#{name,jdbcType=VARCHAR},'%')
		</if>
		<if test="cardNum != null and cardNum !=''">
			and pd.card_num like CONCAT(#{cardNum,jdbcType=VARCHAR},'%')
		</if>
		<if test="healthCard != null and healthCard !=''">
			and pd.health_card like CONCAT(#{healthCard,jdbcType=VARCHAR},'%')
		</if>
		<if test="signStatus != null and signStatus!=''">
			and pc.sign_status = #{signStatus,jdbcType=VARCHAR}
		</if>
		<if test="auditStatus != null and auditStatus !=''">
			and pc.audit_status = #{auditStatus,jdbcType=VARCHAR}
		</if>
		<if test="signStartTime != null and signStartTime !=''">
			and pc.sign_date &gt;= #{signStartTime,jdbcType=TIMESTAMP}
		</if>
		<if test="signEndTime != null and signEndTime !=''">
			and pc.sign_date &lt;= #{signEndTime,jdbcType=TIMESTAMP}
		</if>
		<!-- <if test="inputPerson != null and inputPerson !=''">
			and FIND_IN_SET(#{inputPerson,jdbcType=VARCHAR},da.input_person)
		</if> -->
		<if test="servicePackage != null and servicePackage !=''">
			and pc.service_package = #{servicePackage,jdbcType=VARCHAR}
		</if>
		<if test="finishStatus != null and finishStatus !=''">
			and pc.finish_status = #{finishStatus,jdbcType=VARCHAR}
		</if>
		<if test="medicalType != null and medicalType !=''">
			and pc.medical_type = #{medicalType,jdbcType=VARCHAR}
		</if>
		<if test="signPersonType != null and signPersonType !=''">
			and LOCATE(#{signPersonType,jdbcType=VARCHAR},pc.sign_person_type)>0
		</if>
		<if test="medicalType != null and medicalType !=''">
			and pc.medical_type = #{medicalType,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year !=''">
			and pc.year = #{year,jdbcType=VARCHAR}
		</if>
		<if test="platformId != null">
			and pd.platform_id = #{platformId,jdbcType=INTEGER}
		</if>
		<if test="isPayment != null and isPayment !='' and isPayment=='1' ">
			and pc.sign_payment &gt;0
		</if>
		<if test="isPayment != null and isPayment !='' and isPayment=='2' ">
			and pc.sign_payment = 0
		</if>
		order by pc.create_time desc
	</select>
  <select id="selectContract" parameterType="com.lifelight.api.vo.XlPersonContractVO" 
  resultType="com.lifelight.api.vo.XlPersonContractVO">
			SELECT	   
			pc.id, pc.document_id AS documentId, is_poor AS isPoor, sign_date AS signDate, 
		    pc.mobile, family_count AS familyCount, sign_mode AS signMode, captain_name AS captainName, 
		    doctor_mobile AS doctorMobile, health, YEAR, sign_doctor_id AS signDoctorId, 
		    sign_start_date AS signStartDate, sign_end_date AS signEndDate, service_content AS serviceContent, 
		    health_assessment AS healthAssessment, arrangement, service_mode AS serviceMode, 
		    medical_type AS medicalType, pc.sign_payment AS signPayment, pc.self_payment AS selfPayment, 
		    pc.compensation_payment AS compensationPayment, sign_person_type AS signPersonType, 
		    service_package AS servicePackage, pc.create_time AS createTime, pc.update_time AS updateTime, 
		    sign_status AS signStatus, finish_status AS finishStatus, audit_status AS auditStatus,
		    pd.province_code AS provinceCode,pd.city_code AS cityCode,pd.town_code AS townCode,
		    pd.name AS NAME,pd.card_num AS cardNum,
		    pd.sex AS sex,
		    IFNULL((YEAR(NOW())-YEAR( pd.birthday)-1) + ( DATE_FORMAT(pd.birthday, '%m%d') &lt;= DATE_FORMAT(NOW(), '%m%d') ),-1) AS age,
		    pd.family_relations AS familyRelations,
		    pd.degree_education AS degreeEducation,
		    pd.document_id AS documentNum,pd.occupation AS occupation,
		    pd.residential_address AS residentialAddress,pd.low_insurance_car AS lowInsuranceCar,
		    da1.org_name as signOrgName,da1.org_id as signOrgId,bu.name as signDoctorName
		    ,pd.manager_id as managerId,pc.variable,sp.package_name as packageName
		FROM xl_person_contract AS pc
		LEFT JOIN xl_person_document pd ON pc.document_id = pd.id
		left join backstage_user_info bu on pc.sign_doctor_id = bu.manager_id
		LEFT JOIN (SELECT r.`doctor_id`,r.`org_id`,b.`name` AS org_name FROM jy_org_doc_rel r 
			LEFT JOIN jy_sign_type_rel t ON r.id = t.`jy_rel_id`
			LEFT JOIN backstage_user_info b ON r.`org_id` = b.`manager_id`
			WHERE r.`sign_type` = 1 AND r.`in_use` =1 AND t.`jy_type` =1
		)da1 on pc.sign_doctor_id = da1.doctor_id
		left join service_package sp on pc.service_package = sp.id
		WHERE 1=1 and pc.`in_use` = 1
		<if test="id != null">
			and pc.id = #{id,jdbcType=INTEGER}
		</if>
		<if test="documentId != null">
			and pc.document_id = #{documentId,jdbcType=INTEGER}
		</if>
		<if test="mobile != null and mobile !=''">
			and pc.mobile like CONCAT(#{mobile,jdbcType=VARCHAR},'%')
		</if>
		<if test="managerId != null and managerId !=''">
			and pd.manager_id = #{managerId,jdbcType=VARCHAR}
		</if>
		<!-- <if test="signMode != null and signMode!=''">
			and pc.sign_mode = #{signMode,jdbcType=VARCHAR}
		</if>
		<if test="signStatus != null and signStatus!=''">
			and pc.sign_status = #{signStatus,jdbcType=VARCHAR}
		</if>
		<if test="auditStatus != null and auditStatus !=''">
			and pc.audit_status = #{auditStatus,jdbcType=VARCHAR}
		</if>
		<if test="servicePackage != null and servicePackage !=''">
			and pc.service_package = #{servicePackage,jdbcType=VARCHAR}
		</if>
		<if test="finishStatus != null and finishStatus !=''">
			and pc.finish_status = #{finishStatus,jdbcType=VARCHAR}
		</if>
		<if test="medicalType != null and medicalType !=''">
			and pc.medical_type = #{medicalType,jdbcType=VARCHAR}
		</if>
		<if test="signPersonType != null and signPersonType !=''">
			and pc.sign_person_type = #{signPersonType,jdbcType=VARCHAR}
		</if>
		<if test="medicalType != null and medicalType !=''">
			and pc.medical_type = #{medicalType,jdbcType=VARCHAR}
		</if>
		<if test="year != null and year !=''">
			and pc.year = #{year,jdbcType=VARCHAR}
		</if>
		order by pc.create_time desc -->
	</select>
	
	 <update id="updateByDocumentId" parameterType="com.lifelight.api.vo.XlPersonContractVO">
	    update xl_person_contract
	    <set>
	      <if test="signStatus != null and signStatus !=''">
	        sign_status = #{signStatus,jdbcType=VARCHAR},
	      </if>
	      <if test="auditStatus != null and auditStatus !=''">
	        audit_status = #{auditStatus,jdbcType=VARCHAR},
	      </if>
	      <if test="updateTime != null and updateTime !=''">
	        update_time = #{updateTime,jdbcType=TIMESTAMP},
	      </if>
	      <if test="signEndDate != null and signEndDate !=''">
	        sign_end_date = #{signEndDate,jdbcType=TIMESTAMP},
	      </if>
	      <if test="inUse != null and inUse !=''">
	        in_use = #{inUse,jdbcType=VARCHAR},
	      </if>
	      <if test="variable != null and variable !=''">
	        variable = #{variable,jdbcType=LONGVARCHAR},
	      </if>
	     </set>
	      where 
	      document_id = #{documentId,jdbcType=INTEGER}
	      and in_use = 1
      </update>
      
      
      
   <!-- 签约机构 list -->
   <select id="selectAllOrgCount" parameterType="com.lifelight.api.vo.SignStatisticsVO" 
  		resultType="com.lifelight.api.vo.SignStatisticsVO">
		SELECT  COUNT(*) as countSum,da1.org_id as orgId,da1.name as orgName
		FROM xl_person_contract xc 
		LEFT JOIN (
		SELECT jo.*,bu.`name` FROM jy_org_doc_rel jo 
		LEFT JOIN jy_sign_type_rel js ON jo.id = js.jy_rel_id
		LEFT JOIN backstage_user_info bu ON jo.`org_id` = bu.`manager_id`
		WHERE jo.in_use = 1 AND  js.jy_type = 1
		)da1
		ON xc.`sign_doctor_id` = da1.`doctor_id`
		WHERE xc.in_use =1
		<if test="orgId != null and orgId !='' ">
			and da1.org_id = #{orgId,jdbcType=VARCHAR}
		</if>
		<if test="doctorId != null and doctorId !=''">
			and xc.sign_doctor_id = #{doctorId,jdbcType=VARCHAR}
		</if>
		<if test="startDate != null and startDate !=''">
			and DATE_FORMAT(xc.create_time, '%Y-%m')  &gt;=  DATE_FORMAT(#{startDate,jdbcType=VARCHAR}, '%Y-%m') 
		</if>
		<if test="endDate != null and endDate !=''">
			and DATE_FORMAT(xc.create_time, '%Y-%m') &lt;=  DATE_FORMAT(#{endDate,jdbcType=VARCHAR}, '%Y-%m')
		</if>
		GROUP BY da1.org_id,da1.name
	</select>
	
	 <!-- 有偿签约包数  -->
   <select id="selectPaidCount" parameterType="com.lifelight.api.vo.SignStatisticsVO" 
  		resultType="java.lang.Integer">
		SELECT COUNT(1) AS countSum FROM xl_person_contract xc 
		LEFT JOIN (
		SELECT jo.*,bu.`name` FROM jy_org_doc_rel jo 
		LEFT JOIN jy_sign_type_rel js ON jo.id = js.jy_rel_id
		LEFT JOIN backstage_user_info bu ON jo.`org_id` = bu.`manager_id`
		WHERE jo.in_use = 1 AND  js.jy_type = 1
		)da1
		ON xc.`sign_doctor_id` = da1.`doctor_id`
		WHERE xc.in_use =1 AND sign_payment > 0
		<if test="orgId != null and orgId !='' ">
			and da1.org_id = #{orgId,jdbcType=VARCHAR}
		</if>
		<if test="doctorId != null and doctorId !=''">
			and xc.sign_doctor_id = #{doctorId,jdbcType=VARCHAR}
		</if>
		<if test="startDate != null and startDate !=''">
			and DATE_FORMAT(xc.create_time, '%Y-%m')  &gt;=  DATE_FORMAT(#{startDate,jdbcType=VARCHAR}, '%Y-%m') 
		</if>
		<if test="endDate != null and endDate !=''">
			and DATE_FORMAT(xc.create_time, '%Y-%m') &lt;=  DATE_FORMAT(#{endDate,jdbcType=VARCHAR}, '%Y-%m')
		</if>
		<if test="signPersonType != null and signPersonType !='' and signPersonType !=0 ">
			and FIND_IN_SET(#{signPersonType,jdbcType=VARCHAR}, xc.sign_person_type)
		</if>
		<if test="signPersonType != null and signPersonType !='' and signPersonType ==0 ">
			AND LOCATE('2',xc.sign_person_type)=0 AND LOCATE('3',xc.sign_person_type)=0 AND LOCATE('4',xc.sign_person_type)=0
		</if>
	</select>
	
	 <!-- 有偿签约包 已完成数  -->
   <select id="selectPaidFinishCount" parameterType="com.lifelight.api.vo.SignStatisticsVO" 
  		resultType="java.lang.Integer">
		SELECT COUNT(1) AS finishSum FROM xl_person_contract xc 
		LEFT JOIN (
			SELECT jo.*,bu.`name` FROM jy_org_doc_rel jo 
			LEFT JOIN jy_sign_type_rel js ON jo.id = js.jy_rel_id
			LEFT JOIN backstage_user_info bu ON jo.`org_id` = bu.`manager_id`
			WHERE jo.in_use = 1 AND  js.jy_type = 1
		)da1
		ON xc.`sign_doctor_id` = da1.`doctor_id`
		WHERE xc.in_use =1 AND sign_payment > 0 AND finish_status = 1
		<if test="orgId != null and orgId !='' ">
			and da1.org_id = #{orgId,jdbcType=VARCHAR}
		</if>
		<if test="doctorId != null and doctorId !=''">
			and xc.sign_doctor_id = #{doctorId,jdbcType=VARCHAR}
		</if>
		<if test="startDate != null and startDate !=''">
			and DATE_FORMAT(xc.create_time, '%Y-%m')  &gt;=  DATE_FORMAT(#{startDate,jdbcType=VARCHAR}, '%Y-%m') 
		</if>
		<if test="endDate != null and endDate !=''">
			and DATE_FORMAT(xc.create_time, '%Y-%m') &lt;=  DATE_FORMAT(#{endDate,jdbcType=VARCHAR}, '%Y-%m')
		</if>
		<if test="signPersonType != null and signPersonType !=''">
			and FIND_IN_SET(#{signPersonType,jdbcType=VARCHAR}, xc.sign_person_type)
		</if>
	</select> 
	
	<!-- 内含项目总数  -->
	 <select id="selectPaidItemCount" parameterType="com.lifelight.api.vo.SignStatisticsVO" 
  		resultType="java.lang.Integer">
		SELECT COUNT(1) FROM xl_person_schedule xs
		LEFT JOIN (SELECT xc.*,da1.org_id FROM xl_person_contract xc
				LEFT JOIN (
					SELECT jo.*,bu.`name` FROM jy_org_doc_rel jo 
					LEFT JOIN jy_sign_type_rel js ON jo.id = js.jy_rel_id
					LEFT JOIN backstage_user_info bu ON jo.`org_id` = bu.`manager_id`
					WHERE jo.in_use = 1 AND  js.jy_type = 1
				)da1
				ON xc.`sign_doctor_id` = da1.`doctor_id`
			)da2 ON xs.`contract_id` = da2.`id`
		WHERE da2.`in_use` = 1 AND da2.`sign_payment`>0
		<if test="orgId != null and orgId !='' ">
			and da2.org_id = #{orgId,jdbcType=VARCHAR}
		</if>
		<if test="doctorId != null and doctorId !=''">
			and da2.sign_doctor_id = #{doctorId,jdbcType=VARCHAR}
		</if>
		<if test="startDate != null and startDate !=''">
			and DATE_FORMAT(da2.create_time, '%Y-%m')  &gt;=  DATE_FORMAT(#{startDate,jdbcType=VARCHAR}, '%Y-%m') 
		</if>
		<if test="endDate != null and endDate !=''">
			and DATE_FORMAT(da2.create_time, '%Y-%m') &lt;=  DATE_FORMAT(#{endDate,jdbcType=VARCHAR}, '%Y-%m')
		</if>
		<if test="signPersonType != null and signPersonType !='' and signPersonType !=0 ">
			and FIND_IN_SET(#{signPersonType,jdbcType=VARCHAR}, da2.sign_person_type)
		</if>
		<if test="signPersonType != null and signPersonType !='' and signPersonType ==0 ">
			AND LOCATE('2',da2.sign_person_type)=0 AND LOCATE('3',da2.sign_person_type)=0 AND LOCATE('4',da2.sign_person_type)=0
		</if>
	</select>
	
	 <!-- 执行项目总数 -->
   <select id="selectPaidItemFinishCount" parameterType="com.lifelight.api.vo.SignStatisticsVO" 
  		resultType="java.lang.Integer">
		SELECT COUNT(1) FROM xl_person_schedule xs
		LEFT JOIN (SELECT xc.*,da1.org_id FROM xl_person_contract xc
				LEFT JOIN (
					SELECT jo.*,bu.`name` FROM jy_org_doc_rel jo 
					LEFT JOIN jy_sign_type_rel js ON jo.id = js.jy_rel_id
					LEFT JOIN backstage_user_info bu ON jo.`org_id` = bu.`manager_id`
					WHERE jo.in_use = 1 AND  js.jy_type = 1
				)da1
				ON xc.`sign_doctor_id` = da1.`doctor_id`
			)da2 ON xs.`contract_id` = da2.`id`
		WHERE da2.`in_use` = 1 AND da2.`sign_payment`>0
			and xs.input_person is not null
		<if test="orgId != null and orgId !='' ">
			and da2.org_id = #{orgId,jdbcType=VARCHAR}
		</if>
		<if test="doctorId != null and doctorId !=''">
			and da2.sign_doctor_id = #{doctorId,jdbcType=VARCHAR}
		</if>
		<if test="startDate != null and startDate !=''">
			and DATE_FORMAT(da2.create_time, '%Y-%m')  &gt;=  DATE_FORMAT(#{startDate,jdbcType=VARCHAR}, '%Y-%m') 
		</if>
		<if test="endDate != null and endDate !=''">
			and DATE_FORMAT(da2.create_time, '%Y-%m') &lt;=  DATE_FORMAT(#{endDate,jdbcType=VARCHAR}, '%Y-%m')
		</if>
		<if test="signPersonType != null and signPersonType !='' and signPersonType !=0 ">
			and FIND_IN_SET(#{signPersonType,jdbcType=VARCHAR}, da2.sign_person_type)
		</if>
		<if test="signPersonType != null and signPersonType !='' and signPersonType ==0 ">
			AND LOCATE('2',da2.sign_person_type)=0 AND LOCATE('3',da2.sign_person_type)=0 AND LOCATE('4',da2.sign_person_type)=0
		</if>
	</select> 
</mapper>